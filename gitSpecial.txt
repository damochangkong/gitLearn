这里不对每一条命令做详尽的解释，这些命令或类似命令贯穿我们顺利的一个完整提交，关于其他情况以及这些命令的详细解释留待后面叙述。
（1）git status //查看工作区代码相对于暂存区的差别，
（2）git add . // 将当前目录下修改的所有代码从工作区添加到暂存区 . 代表当前目录
（3）git commit -m “commit-message” //将暂存区的代码提交到本地版本库
（4）git push origin master  // 将本地版本库推送到远程服务器，origin是远程主机，master表示是远程服务器上的master分支，分支名是可以修改的。
1. 查看本地分支 git branch
2. 查看远程分支 git branch -r
3. 查看所有分支 git branch -a
4. 切换远程分支 git checkout -b myRelease origin/develop

git checkout -b develop origin/develop
git checkout -b master origin/master

场景是：
1. 远程仓库已经存在
2. 本地通过git init创建了一个本地仓，而非通过git clone的方式创建的本地备份仓。
3. 需求是将两者链接起来，先拉去远程仓的东西到本地仓，然后提供本地仓库的东西到远程仓。

1、通过命令与远程仓建立联系。
git remote add origin git@github.com:damochangkong/gitLearn.git
2. 拉去远程仓库的东西到本地仓。
git pull origin master --allow-unrelated-histories
3. 提交本地仓的东西到远程仓。
git push <远程主机名> <本地分支名>:<远程分支名>
git push origin master:master
---查看远程仓库
git remote -v
---查看远程分支
git branch -r
git branch --set-upstream-to=origin/dev dev
